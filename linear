import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
# Load the dataset
df = pd.read_csv('house_data.csv')

# Display the first few rows of the dataset to understand its structure
print(df.head())
# Assuming column names in your dataset are as follows, adjust if necessary
X = df[['SquareFeet', 'Bedrooms', 'Bathrooms']].values
y = df['Price'].values
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)
# Initialize the linear regression model
model = LinearRegression()

# Fit the model to the training data
model.fit(X_train, y_train)

# Predict on the test data
y_pred = model.predict(X_test)
# Calculate mean squared error
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

# Calculate R-squared value
r2 = r2_score(y_test, y_pred)
print(f'R-squared: {r2}')
import joblib

# Save the model to disk
joblib.dump(model, 'house_price_prediction_model.pkl')

# Later, load the model from disk
# loaded_model = joblib.load('house_price_prediction_model.pkl')
